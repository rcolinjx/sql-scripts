USE ROLE SYSADMIN;

CREATE DATABASE IF NOT EXISTS DEV;
CREATE TRANSIENT SCHEMA IF NOT EXISTS DEV.REFERENCE WITH MANAGED ACCESS;

USE SCHEMA DEV.REFERENCE;

CREATE  OR REPLACE TABLE DIM_DATE AS
SELECT
        DATEADD(DAY,SEQ4(),'1900-01-01')::DATE DATE

        -- YEAR
        ,YEAR(DATE) YEAR
        ,DATE_FROM_PARTS(YEAR,1,1) YEAR_BEGIN_DATE
        ,LAST_DAY(DATE, 'YEAR') YEAR_END_DATE
        ,DATEDIFF('DAY',YEAR_BEGIN_DATE,YEAR_END_DATE) + 1 YEAR_DAY_COUNT

        ,DATE = YEAR_BEGIN_DATE FIRST_OF_YEAR_INDICATOR
        ,DATE = YEAR_END_DATE LAST_OF_YEAR_INDICATOR
        ,YEAR % 4 = 0 AND YEAR % 400 = 0 LEAP_YEAR_INDICATOR


        -- QUARTER
        ,QUARTER(DATE) QUARTER_OF_YEAR
        //QUARTER BEGIN DATE
        ,LAST_DAY(DATE,'QUARTER') QUARTER_END_DATE


        -- MONTH
        ,MONTHNAME(DATE) MONTH_NAME
        ,MONTH(DATE) MONTH_OF_YEAR
        ,DATE_FROM_PARTS(YEAR,MONTH_OF_YEAR,1) MONTH_BEGIN_DATE
        ,LAST_DAY(DATE, 'MONTH') MONTH_END_DATE
        ,DATEDIFF('DAY',MONTH_BEGIN_DATE,MONTH_END_DATE) + 1 MONTH_DAY_COUNT

        ,DATE = MONTH_BEGIN_DATE FIRST_OF_MONTH_INDICATOR
        ,DATE = MONTH_END_DATE LAST_OF_MONTH_INDICATOR

        ,CASE
                WHEN MONTH_OF_YEAR IN (1,4,7,10) THEN 1
                WHEN MONTH_OF_YEAR IN (2,5,8,11) THEN 2
                WHEN MONTH_OF_YEAR IN (3,6,9,12) THEN 3
         END MONTH_OF_QUARTER


        -- WEEK

        ,WEEKOFYEAR(DATE) WEEK_OF_YEAR
        ,WEEKISO(DATE) WEEK_OF_YEAR_ISO

        // ,WEEK_OF_MONTH

        ,YEAROFWEEK(DATE) YEAR_OF_WEEK
        ,YEAROFWEEKISO(DATE) YEAR_OF_WEEK_ISO

        -- DAY
        ,DAYNAME(DATE) DAY_NAME
        ,DAYOFYEAR(DATE) DAY_OF_YEAR
        // ,DAYOFQUARTER(DATE) DAY_OF_QUARTER
        ,DAYOFMONTH(DATE) DAY_OF_MONTH
        ,DAYOFWEEK(DATE) DAY_OF_WEEK


        ,CASE
              WHEN DAY_OF_MONTH = 1 AND MONTH_OF_YEAR = 1 THEN $$New Year's Day$$
              WHEN DAY_OF_MONTH = 4 AND MONTH_OF_YEAR = 7 THEN 'Independence Day'
              WHEN DAY_OF_MONTH = 11 AND MONTH_OF_YEAR = 11 THEN $$Veterans Day$$
              WHEN DAY_OF_MONTH = 25 AND MONTH_OF_YEAR = 12 THEN 'Christmas Day'
              -- TODO: https://en.wikipedia.org/wiki/Federal_holidays_in_the_United_States
              ELSE NULL
         END HOLIDAY_NAME_US

         ,HOLIDAY_NAME_US IS NULL HOLIDAY_INDICATOR

        ,DAY_NAME IN ('Sat','Sun') WEEKEND_INDICATOR

FROM    TABLE(GENERATOR(ROWCOUNT => 73414)) -- days between 1900 and 2101
;

CREATE  OR REPLACE TABLE DIM_TIME AS
SELECT  DATEADD('SEC',SEQ4(),'00:00:00'::TIME) TIME
        ,HOUR(TIME) HOUR_24
        ,CASE
            WHEN HOUR_24 IN (0,12) THEN 12
            WHEN HOUR_24 > 12 THEN HOUR_24 - 12
            ELSE HOUR_24
         END HOUR_12
        ,IFF(HOUR_24 <= 12,'AM','PM') AMPM
        ,MINUTE(TIME) MINUTE
        ,SECOND(TIME) SECOND
FROM    TABLE(GENERATOR(ROWCOUNT => 86400)) -- seconds in the day
;
